---
const { frontmatter } = Astro.props;
import ArrowLeft from "@astropub/icons/ArrowLeft";
import type { CollectionEntry } from "astro:content";
import TableOfContents from "../components/TableOfContents.astro";
import "../styles/global.css";

type MarkdownHeading = {
  text: string;
  level: number;
};

type Props = CollectionEntry<"blog">["data"] & { headings: MarkdownHeading[] };

const { title, pubDate, description, headings } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <main>
      <nav>
        <a href="/blog">
          <ArrowLeft class="icon" />
          Back to articles
        </a>
      </nav>

      <header>
        <h1>{frontmatter.title}</h1>
        <div class="meta">
          <time datetime={frontmatter.pubDate.toString()}>
            {
              new Date(frontmatter.pubDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
          <span>By {frontmatter.author}</span>
        </div>
        {
          frontmatter.description && (
            <p class="description">{frontmatter.description}</p>
          )
        }
      </header>

      {
        frontmatter.image && (
          <div class="featured-image">
            <img src={frontmatter.image.url} alt={frontmatter.image.alt} />
          </div>
        )
      }

      {headings.length > 0 && <TableOfContents headings={headings} />}

      <article>
        <slot />
      </article>
    </main>

    <style>
      body {
        max-width: 48rem;
        margin: 0 auto;
        padding: 2rem 1rem;
        line-height: 1.6;
      }

      nav {
        margin-bottom: 2rem;
      }

      nav a {
        display: inline-flex;
        align-items: center;
        text-decoration: none;
        font-size: 0.9rem;
      }

      nav a:hover {
        opacity: 0.7;
      }

      .icon {
        width: 1rem;
        height: 1rem;
        margin-right: 0.5rem;
      }

      header {
        margin-bottom: 3rem;
      }

      h1 {
        font-size: 1.8rem;
        font-weight: 100;
        margin: 0 0 1rem 0;
        line-height: 1.2;
      }

      h2 {
        font-size: 0.4rem;
        font-weight: 100;
        margin: 0 0 1rem 0;
        line-height: 1.2;
      }
      p {
        font-size: 0.8rem;
        font-weight: 100;
        margin: 0 0 1rem 0;
        line-height: 1.2;
      }

      .meta {
        display: flex;
        gap: 1rem;
        font-size: 0.9rem;
        opacity: 0.7;
        margin-bottom: 1rem;
      }

      .description {
        font-size: 1.1rem;
        opacity: 0.8;
        margin: 1rem 0 0 0;
      }

      article {
        margin-bottom: 3rem;
      }

      .featured-image {
        margin-bottom: 2rem;
      }

      .featured-image img {
        width: 100%;
        height: 300px;
        object-fit: cover;
        border-radius: 4px;
      }

      /* Minimal prose styling */
      :global(article h2) {
        font-size: 1.4rem;
        font-weight: 400;
        margin: 2rem 0 1rem 0;
      }

      :global(article h3) {
        font-size: 1.2rem;
        font-weight: 500;
        margin: 1.5rem 0 0.5rem 0;
      }

      :global(article p) {
        margin-bottom: 1rem;
      }

      :global(article a) {
        text-decoration: underline;
      }

      :global(article ul, article ol) {
        margin: 1rem 0;
        padding-left: 1.5rem;
      }

      :global(article blockquote) {
        border-left: 3px solid;
        padding-left: 1rem;
        margin: 1.5rem 0;
        opacity: 0.8;
      }

      :global(article pre) {
        background: rgba(0, 0, 0, 0.1);
        padding: 1rem;
        border-radius: 4px;
        overflow-x: auto;
        margin: 1.5rem 0;
      }

      :global(article code) {
        background: rgba(0, 0, 0, 0.1);
        padding: 0.2rem 0.4rem;
        border-radius: 3px;
        font-size: 0.9rem;
      }

      :global(article pre code) {
        background: transparent;
        padding: 0;
      }

      @media (max-width: 768px) {
        body {
          padding: 1rem;
        }

        h1 {
          font-size: 0.2rem;
        }

        .meta {
          flex-direction: column;
          gap: 0.5rem;
        }
      }
    </style>
  </body>
</html>
